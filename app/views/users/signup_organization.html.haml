#signup
  - if @user
    %ul
    - @user.errors.messages.each do |message|
      %li
        = message.first
        %ul
          - message.last.each do |reason|
            %li= reason
  - if @organization
    %ul
    - @organization.errors.messages.each do |message|
      %li
        = message.first
        %ul
          - message.last.each do |reason|
            %li= reason
  = form_for :user, url: '/users/create_organization', html: { id: 'signup_form' } do |f|
    .clearfix= f.email_field :email, placeholder: 'email', autocomplete: 'off'
    .clearfix= f.password_field :password, placeholder: 'password', autocomplete: 'off'
    .clearfix= password_field_tag :password_confirmation, '', placeholder: 'password confirmation', autocomplete: 'off'
    .clearfix= f.text_field :first_name, placeholder: 'first name', autocomplete: 'off'
    .clearfix= f.text_field :last_name, placeholder: 'last name', autocomplete: 'off'
    .clearfix= text_field_tag :name, '', id: 'organization_name', name: 'organization[name]', placeholder: 'organization name', autocomplete: 'off'
    .control-group
      %label Timezone:
      .controls= time_zone_select :organization, :timezone, ActiveSupport::TimeZone.us_zones, default: 'Pacific Time (US & Canada)'
    = f.submit :signup, style: 'display:inline'

- if @organization
  :javascript
    $('#organization_name').val('#{@organization.name}')

- if @organization && @organization.errors.first
  :javascript
    $('#organization_name').parent().addClass('error')
    $('#user_password').parent().addClass('warning')

:javascript
  $('.field_with_errors input').each(function(){
    $(this).parent().parent().addClass('error')
    $('#user_password').parent().addClass('warning')
  })
  $.validator.addMethod('password', function(value) {
    if (value.search(/\d/) != -1 && value.search(/[a-zA-Z]/) != -1) { return true }
    else { return false }
  }, 'Please enter a password containing both letters and numbers.')
  $('#signup_form').validate({
    rules: {
      'user[password]': { required: true, minlength: 8, password: true },
      'password_confirmation': { equalTo: '#user_password' }
    }
  })
